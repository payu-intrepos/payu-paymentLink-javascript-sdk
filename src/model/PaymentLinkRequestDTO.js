/**
 * Hub Token
 * Generate Token
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressDTO from './AddressDTO';
import CustomAttributeDTO from './CustomAttributeDTO';
import CustomerDTO from './CustomerDTO';
import ReminderDTO from './ReminderDTO';
import UdfDTO from './UdfDTO';

/**
 * The PaymentLinkRequestDTO model module.
 * @module model/PaymentLinkRequestDTO
 * @version v1.0.0
 */
class PaymentLinkRequestDTO {
    /**
     * Constructs a new <code>PaymentLinkRequestDTO</code>.
     * @alias module:model/PaymentLinkRequestDTO
     * @param description {String} description or purpose of creating the.payment link.
     * @param source {String} source of payment generation.
     */
    constructor(description, source) { 
        
        PaymentLinkRequestDTO.initialize(this, description, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, source) { 
        obj['description'] = description;
        obj['source'] = source;
    }

    /**
     * Constructs a <code>PaymentLinkRequestDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentLinkRequestDTO} obj Optional instance to populate.
     * @return {module:model/PaymentLinkRequestDTO} The populated <code>PaymentLinkRequestDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentLinkRequestDTO();

            if (data.hasOwnProperty('invoiceNumber')) {
                obj['invoiceNumber'] = ApiClient.convertToType(data['invoiceNumber'], 'String');
            }
            if (data.hasOwnProperty('isAmountFilledByCustomer')) {
                obj['isAmountFilledByCustomer'] = ApiClient.convertToType(data['isAmountFilledByCustomer'], 'Boolean');
            }
            if (data.hasOwnProperty('subAmount')) {
                obj['subAmount'] = ApiClient.convertToType(data['subAmount'], 'Number');
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
            }
            if (data.hasOwnProperty('shippingCharge')) {
                obj['shippingCharge'] = ApiClient.convertToType(data['shippingCharge'], 'Number');
            }
            if (data.hasOwnProperty('minAmountForCustomer')) {
                obj['minAmountForCustomer'] = ApiClient.convertToType(data['minAmountForCustomer'], 'Number');
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = ApiClient.convertToType(data['discount'], 'Number');
            }
            if (data.hasOwnProperty('adjustment')) {
                obj['adjustment'] = ApiClient.convertToType(data['adjustment'], 'Number');
            }
            if (data.hasOwnProperty('smsConfirm')) {
                obj['smsConfirm'] = ApiClient.convertToType(data['smsConfirm'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('isPartialPaymentAllowed')) {
                obj['isPartialPaymentAllowed'] = ApiClient.convertToType(data['isPartialPaymentAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('maxPaymentsAllowed')) {
                obj['maxPaymentsAllowed'] = ApiClient.convertToType(data['maxPaymentsAllowed'], 'Number');
            }
            if (data.hasOwnProperty('batchId')) {
                obj['batchId'] = ApiClient.convertToType(data['batchId'], 'String');
            }
            if (data.hasOwnProperty('expiryDate')) {
                obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'String');
            }
            if (data.hasOwnProperty('scheduledFor')) {
                obj['scheduledFor'] = ApiClient.convertToType(data['scheduledFor'], 'String');
            }
            if (data.hasOwnProperty('viaEmail')) {
                obj['viaEmail'] = ApiClient.convertToType(data['viaEmail'], 'Boolean');
            }
            if (data.hasOwnProperty('viaSms')) {
                obj['viaSms'] = ApiClient.convertToType(data['viaSms'], 'Boolean');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = CustomerDTO.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('udf')) {
                obj['udf'] = UdfDTO.constructFromObject(data['udf']);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressDTO.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('emailTemplateName')) {
                obj['emailTemplateName'] = ApiClient.convertToType(data['emailTemplateName'], 'String');
            }
            if (data.hasOwnProperty('smsTemplateName')) {
                obj['smsTemplateName'] = ApiClient.convertToType(data['smsTemplateName'], 'String');
            }
            if (data.hasOwnProperty('validationPeriod')) {
                obj['validationPeriod'] = ApiClient.convertToType(data['validationPeriod'], 'String');
            }
            if (data.hasOwnProperty('timeUnit')) {
                obj['timeUnit'] = ApiClient.convertToType(data['timeUnit'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('successURL')) {
                obj['successURL'] = ApiClient.convertToType(data['successURL'], 'String');
            }
            if (data.hasOwnProperty('failureURL')) {
                obj['failureURL'] = ApiClient.convertToType(data['failureURL'], 'String');
            }
            if (data.hasOwnProperty('reminder')) {
                obj['reminder'] = ReminderDTO.constructFromObject(data['reminder']);
            }
            if (data.hasOwnProperty('customAttributes')) {
                obj['customAttributes'] = ApiClient.convertToType(data['customAttributes'], [CustomAttributeDTO]);
            }
            if (data.hasOwnProperty('dropCategory')) {
                obj['dropCategory'] = ApiClient.convertToType(data['dropCategory'], 'String');
            }
            if (data.hasOwnProperty('enforcePayMethod')) {
                obj['enforcePayMethod'] = ApiClient.convertToType(data['enforcePayMethod'], 'String');
            }
        }
        return obj;
    }


}

/**
 * It is used for identifying a payment link. This must be alphanumeric.
 * @member {String} invoiceNumber
 */
PaymentLinkRequestDTO.prototype['invoiceNumber'] = undefined;

/**
 * This parameter contains any of the following values to specify whether it is an open invoices (when customer fills amount) or fixed amount  true-It is an open invoice where the customer can fill the amount. The subamount parameter must be null in this case  false-It is closed invoice and amount is fixed
 * @member {Boolean} isAmountFilledByCustomer
 */
PaymentLinkRequestDTO.prototype['isAmountFilledByCustomer'] = undefined;

/**
 * Payment Amount.The value must be greater than or equal to 1
 * @member {Number} subAmount
 */
PaymentLinkRequestDTO.prototype['subAmount'] = undefined;

/**
 *  tax amount for the payment transaction. This value must be greater than zero.
 * @member {Number} tax
 */
PaymentLinkRequestDTO.prototype['tax'] = undefined;

/**
 *  shipping charges for delivering the goods. This value must be greater than zero.
 * @member {Number} shippingCharge
 */
PaymentLinkRequestDTO.prototype['shippingCharge'] = undefined;

/**
 *  minimum amount a customer needs to pay in case of partial payment.
 * @member {Number} minAmountForCustomer
 */
PaymentLinkRequestDTO.prototype['minAmountForCustomer'] = undefined;

/**
 * @member {Number} discount
 */
PaymentLinkRequestDTO.prototype['discount'] = undefined;

/**
 * @member {Number} adjustment
 */
PaymentLinkRequestDTO.prototype['adjustment'] = undefined;

/**
 * @member {String} smsConfirm
 */
PaymentLinkRequestDTO.prototype['smsConfirm'] = undefined;

/**
 * description or purpose of creating the.payment link.
 * @member {String} description
 */
PaymentLinkRequestDTO.prototype['description'] = undefined;

/**
 * source of payment generation.
 * @member {String} source
 */
PaymentLinkRequestDTO.prototype['source'] = undefined;

/**
 * @member {Boolean} isPartialPaymentAllowed
 */
PaymentLinkRequestDTO.prototype['isPartialPaymentAllowed'] = undefined;

/**
 * currency details
 * @member {String} currency
 */
PaymentLinkRequestDTO.prototype['currency'] = undefined;

/**
 * @member {Number} maxPaymentsAllowed
 */
PaymentLinkRequestDTO.prototype['maxPaymentsAllowed'] = undefined;

/**
 * @member {String} batchId
 */
PaymentLinkRequestDTO.prototype['batchId'] = undefined;

/**
 * expiry date of the payment link (will be 365 days in all other cases).
 * @member {String} expiryDate
 */
PaymentLinkRequestDTO.prototype['expiryDate'] = undefined;

/**
 * @member {String} scheduledFor
 */
PaymentLinkRequestDTO.prototype['scheduledFor'] = undefined;

/**
 * specify whether to directly send an email to customer upon payment link generation or late
 * @member {Boolean} viaEmail
 */
PaymentLinkRequestDTO.prototype['viaEmail'] = undefined;

/**
 * specify whether to directly send as SMS to customer upon payment link generation or later
 * @member {Boolean} viaSms
 */
PaymentLinkRequestDTO.prototype['viaSms'] = undefined;

/**
 * @member {module:model/CustomerDTO} customer
 */
PaymentLinkRequestDTO.prototype['customer'] = undefined;

/**
 * @member {module:model/UdfDTO} udf
 */
PaymentLinkRequestDTO.prototype['udf'] = undefined;

/**
 * @member {module:model/AddressDTO} address
 */
PaymentLinkRequestDTO.prototype['address'] = undefined;

/**
 * @member {String} emailTemplateName
 */
PaymentLinkRequestDTO.prototype['emailTemplateName'] = undefined;

/**
 * @member {String} smsTemplateName
 */
PaymentLinkRequestDTO.prototype['smsTemplateName'] = undefined;

/**
 * @member {String} validationPeriod
 */
PaymentLinkRequestDTO.prototype['validationPeriod'] = undefined;

/**
 * @member {String} timeUnit
 */
PaymentLinkRequestDTO.prototype['timeUnit'] = undefined;

/**
 * @member {String} notes
 */
PaymentLinkRequestDTO.prototype['notes'] = undefined;

/**
 * @member {String} successURL
 */
PaymentLinkRequestDTO.prototype['successURL'] = undefined;

/**
 * @member {String} failureURL
 */
PaymentLinkRequestDTO.prototype['failureURL'] = undefined;

/**
 * @member {module:model/ReminderDTO} reminder
 */
PaymentLinkRequestDTO.prototype['reminder'] = undefined;

/**
 * @member {Array.<module:model/CustomAttributeDTO>} customAttributes
 */
PaymentLinkRequestDTO.prototype['customAttributes'] = undefined;

/**
 * @member {String} dropCategory
 */
PaymentLinkRequestDTO.prototype['dropCategory'] = undefined;

/**
 * @member {String} enforcePayMethod
 */
PaymentLinkRequestDTO.prototype['enforcePayMethod'] = undefined;






export default PaymentLinkRequestDTO;

