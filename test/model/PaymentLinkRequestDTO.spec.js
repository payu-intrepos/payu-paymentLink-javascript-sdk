/**
 * Hub Token
 * Generate Token
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HubToken);
  }
}(this, function(expect, HubToken) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HubToken.PaymentLinkRequestDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentLinkRequestDTO', function() {
    it('should create an instance of PaymentLinkRequestDTO', function() {
      // uncomment below and update the code to test PaymentLinkRequestDTO
      //var instane = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be.a(HubToken.PaymentLinkRequestDTO);
    });

    it('should have the property invoiceNumber (base name: "invoiceNumber")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property isAmountFilledByCustomer (base name: "isAmountFilledByCustomer")', function() {
      // uncomment below and update the code to test the property isAmountFilledByCustomer
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property subAmount (base name: "subAmount")', function() {
      // uncomment below and update the code to test the property subAmount
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property shippingCharge (base name: "shippingCharge")', function() {
      // uncomment below and update the code to test the property shippingCharge
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property minAmountForCustomer (base name: "minAmountForCustomer")', function() {
      // uncomment below and update the code to test the property minAmountForCustomer
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property adjustment (base name: "adjustment")', function() {
      // uncomment below and update the code to test the property adjustment
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property smsConfirm (base name: "smsConfirm")', function() {
      // uncomment below and update the code to test the property smsConfirm
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property isPartialPaymentAllowed (base name: "isPartialPaymentAllowed")', function() {
      // uncomment below and update the code to test the property isPartialPaymentAllowed
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property maxPaymentsAllowed (base name: "maxPaymentsAllowed")', function() {
      // uncomment below and update the code to test the property maxPaymentsAllowed
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property batchId (base name: "batchId")', function() {
      // uncomment below and update the code to test the property batchId
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property expiryDate (base name: "expiryDate")', function() {
      // uncomment below and update the code to test the property expiryDate
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property scheduledFor (base name: "scheduledFor")', function() {
      // uncomment below and update the code to test the property scheduledFor
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property viaEmail (base name: "viaEmail")', function() {
      // uncomment below and update the code to test the property viaEmail
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property viaSms (base name: "viaSms")', function() {
      // uncomment below and update the code to test the property viaSms
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property udf (base name: "udf")', function() {
      // uncomment below and update the code to test the property udf
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property emailTemplateName (base name: "emailTemplateName")', function() {
      // uncomment below and update the code to test the property emailTemplateName
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property smsTemplateName (base name: "smsTemplateName")', function() {
      // uncomment below and update the code to test the property smsTemplateName
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property validationPeriod (base name: "validationPeriod")', function() {
      // uncomment below and update the code to test the property validationPeriod
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property timeUnit (base name: "timeUnit")', function() {
      // uncomment below and update the code to test the property timeUnit
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property successURL (base name: "successURL")', function() {
      // uncomment below and update the code to test the property successURL
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property failureURL (base name: "failureURL")', function() {
      // uncomment below and update the code to test the property failureURL
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property reminder (base name: "reminder")', function() {
      // uncomment below and update the code to test the property reminder
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property customAttributes (base name: "customAttributes")', function() {
      // uncomment below and update the code to test the property customAttributes
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property dropCategory (base name: "dropCategory")', function() {
      // uncomment below and update the code to test the property dropCategory
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

    it('should have the property enforcePayMethod (base name: "enforcePayMethod")', function() {
      // uncomment below and update the code to test the property enforcePayMethod
      //var instance = new HubToken.PaymentLinkRequestDTO();
      //expect(instance).to.be();
    });

  });

}));
